from customtkinter import *
from PIL import Image
import json
from CTkMessagebox import *
import pygame


click_multiplier = 1  # Начальный множитель (1 за клик)
current_pigeon = None
all_pigeon = [1,2,3,4]
pigeon_images = {
    1: CTkImage(Image.open('Pigeons/Pigeons/Pigeon2.png'), size=(200, 150)),
    2: CTkImage(Image.open('Pigeons/Pigeons/Pigeon3.png'), size=(200, 150)),
    3: CTkImage(Image.open('Pigeons/Pigeons/Pigeon4.png'), size=(200, 150)),
    4: CTkImage(Image.open('Pigeons/Pigeons/Pigeon5.png'), size=(200, 150))
}

pigeon_animation = {
    1: CTkImage(Image.open('Pigeons/pigeon_animation/pigeon_animation1.png'), size=(200, 200)),
    2: CTkImage(Image.open('Pigeons/pigeon_animation/pigeon_animation2.png'), size=(200, 200)),
    3: CTkImage(Image.open('Pigeons/pigeon_animation/pigeon_animation3.png'), size=(200, 200)),
    4: CTkImage(Image.open('Pigeons/pigeon_animation/pigeon_animation4.png'), size=(200, 200))

}

music_images = {
    1 : CTkImage(Image.open('Pigeons/Music_icons/music1_icon.png'),size=(200, 150)),
    2 : CTkImage(Image.open('Pigeons/Music_icons/music2_icon.jpg'), size=(200, 150)),
    3 : CTkImage(Image.open('Pigeons/Music_icons/music3_icon.jpg'), size=(200, 150)),
    4 : CTkImage(Image.open('Pigeons/Music_icons/music4_icon.jpg'), size=(200, 150))
}





frame_index = 1 # Номер текущего кадра

pygame.mixer.init()   # Включаем звуковой модуль

auto_click = False  # Автокликер выключен

pigeon_list =[]
music_list = []

minigame_active = False # Minigame не активна
minigame_clicks = 0 # Клики в minigame равны 0

level = 1 # Уровень в minigame


def use_music(music_id):
    pygame.mixer.music.stop()
    if music_id == 1:
        pygame.mixer.music.load('Pigeons/Music/music1.mp3')
        pygame.mixer.music.play(loops=-1)

    elif music_id == 2:
        pygame.mixer.music.load('Pigeons/Music/music2.mp3')
        pygame.mixer.music.play(loops=-1)
    elif music_id == 3:
        pygame.mixer.music.load('Pigeons/Music/music3.mp3')
        pygame.mixer.music.play(loops=-1)
    elif music_id == 4:
        pygame.mixer.music.load('Pigeons/Music/music4.mp3')
        pygame.mixer.music.play(loops=-1)


def start_minigame(time=10):
    global minigame_clicks, minigame_active, level
    required_clicks = 20 * level # Усложняем в зависимости от уровня
    if time == 10:
        minigame_active = True
        minigame_clicks = 0
        CTkMessagebox(title='Minigame', message=f'Click {required_clicks} times in 10 seconds')
        win.after(10000, end_minigame)

    if time > 0:
        minigame_button.configure(text=f'Time left {time}')  # Обновляем текст сколько осталось времени нашей игры
        win.after(1000,lambda: start_minigame(time - 1))  # Строка которая каждую секунду изменят текст


def end_minigame():
    global minigame_active, count, level, minigame_clicks, required_clicks
    minigame_active = False # Выключаем minigame
    required_clicks = 20 * level


    if minigame_clicks >= required_clicks:
        reward = 200 * level
        count += reward
        level += 1
        label_clicks.configure(text = str(count))
        CTkMessagebox(title='Congratulations', message=f'You clicked {minigame_clicks} times, so you gain a reward {reward} clicks, and reached {level} level')
        save_progres()
        minigame_button.configure(text=f'Level {level}')
    else:
        CTkMessagebox(title='Lose', message=f'You clicked only {minigame_clicks} times, Level = 1. Try again later')
        level = 1
        save_progres()


    minigame_button.configure(state='disabled', text='Wait 2 minutes', bg_color='red', fg_color='red')
    win.after(12000, lambda: minigame_button.configure(state='normal',text=f'Minigame - Lvl{level}', bg_color='black', fg_color='black'))




def clear_all_information(): # Функция по очистке всей информации по окончанию игры
    with open('progress.json', 'w') as file:
        json.dump({}, file) # Записываем пустой файл


def eg_button_function():
    if start_auto_clicker:
        end_game.configure(state='disabled')
        start_auto_clicker()
        pygame.mixer.music.stop() # Останавливаем прошлую музыку
        pygame.mixer.Sound('Pigeons/Audio.mp3').play(loops=4) # Включаем новую
        win.after(3000, lambda: CTkMessagebox(title='Congratulation', message='Congratulation!!! You completed the game'))
        win.after(11000, lambda: clear_all_information() ) # Через 11 секунд вызываем фунцию по очищению всей информации
        win.after(12000, win.destroy) # Через 12 секунд закрываем окно


def end_game_button():
    # if 1 and 2 and 3 and 4 in pigeon_list: # Не правильный вариант, так как всегда будет истина
    if 1 in pigeon_list and 2 in pigeon_list and 3 in pigeon_list and 4 in pigeon_list: # Проверяем каждый id по отдельности
        win.after(3000, lambda: end_game.place(x=10, y=550))



def auto_clicker(): # Создаем автокликер
    global auto_click
    if auto_click:
        button_clicked()
        win.after(10, auto_clicker) # Клик каждые 10 мс



def start_auto_clicker(time=10, start=True): # Автокликер работает 10 секунд
    global auto_click, count
    if start:
        if count >= 350:
            count -= 350
            auto_click = True # Запускаем автокликер
            auto_clicker1.configure(state='disabled', fg_color='green')
            auto_clicker()
            win.after(10000, stop_auto_clicker)
        else:
            CTkMessagebox(title='Error', message='Not enought money')
            return

    if time > 0:
        auto_clicker1.configure(text=f'Autoclicker {time}') # Обновляем текст сколько осталось времени нашего автокликера
        win.after(1000, lambda: start_auto_clicker(time-1, start=False)) # Строка которая каждую секунду изменят текст
    else:
        auto_clicker1.configure(state='disabled', fg_color='grey', text=f'Autoclicker disabled for 30 seconds') # По окончанию автокликера изменяем fg на серый цвет и делаем автокликер недоступным на 30 секунд
        auto_clicker1.place(x=165, y=550)
        auto_clicker1.after(30000, lambda: auto_clicker1.place(x=210, y=550)) # Через 10 секунд ставим кнопку на исходное положение
        auto_clicker1.after(30000, lambda: auto_clicker1.configure(state='normal', fg_color='blue', text='Autoclicker - 350')) # Через 10 секунд меняем цвет и текст кнопки



def stop_auto_clicker(): # Функция по остановлению автокликера
    global auto_click
    auto_click = False


def play_sound():
    pygame.mixer.music.load('Pigeons/Rick Astley (Рик Эстли) - Never Gonna Give You Up.mp3')
    pygame.mixer.music.play(loops=-1)  # Используем loops -1 для бесконечного цикла

    # pygame.mixer.Sound('Pigeons/Audio.mp3').play(-1)


def change_pigeon():
    global frame_index
    frames = list(pigeon_animation.values()) # Превращаем словарь в список
    pigeon_place.configure(image=frames[frame_index]) # Меняем голубя
    frame_index = (frame_index + 1) % len(frames)  # Каждый цикл прибавляет +1 к нашему кадру, то есть становиться следующая картинка, а % len(frames) для того чтобы зацикливать


def x_clicks(multiplier):
    global click_multiplier
    click_multiplier = multiplier  # Меняем множитель на голубя
    CTkMessagebox(title='Success', message=f'Now you get x{click_multiplier} clicks!')



def musics_inventory():
    music_list.sort()
    inventory2 = CTkToplevel()
    inventory2.title('Music Inventory')
    center_window(inventory2, 500, 700)
    inventory2.grab_set()
    inventory2.configure(fg_color='#3271a8')
    y = 10
    for music_id in music_list:
        hz2 = CTkFrame(inventory2)
        hz2.place(x=10, y=y)
        hz3 = CTkButton(inventory2, text='Use this music', fg_color='black', command=lambda m=music_id: use_music(m))
        hz3.place(x=220, y=y+45)


        back = music_images[music_id]
        CTkLabel(hz2, text='', image=back).pack()
        y += 160
    CTkButton(inventory2, text='Exit', fg_color='red', command=inventory2.destroy).place(x=300)


def pigeon_inventory():
    pigeon_list.sort()
    inventory1 = CTkToplevel()
    inventory1.title('Inventory')
    center_window(inventory1, 500, 700)
    inventory1.grab_set()
    inventory1.configure(fg_color='#3271a8')
    y = 10 # Начальная позиция по y
    for pigeon_id in pigeon_list:
        hz = CTkFrame(inventory1)
        hz.place(x=10, y=y)
        hz1 = CTkButton(inventory1, text=f'Use - x{pigeon_id+1} clicks', fg_color='black', command=lambda pid=pigeon_id: x_clicks(pid + 1)) # Используем лямбду для передавания текущего значения
        hz1.place(x=220, y=y+45) # y+45 - чтобы нашие кнопки множителя были по центру навпротив голубя


        pigeon_image = pigeon_images[pigeon_id]
        CTkLabel(hz, text='', image=pigeon_image).pack()
        y += 160 # Смещаем на 160 по y
    CTkButton(inventory1, text='Exit', fg_color='red' ,command=inventory1.destroy).place(x=300)


def save_progres():
    with open('progress.json', 'w') as file:
        json.dump({"count": count,   # Заполняем файл
                       "pigeon_list": pigeon_list,
                       "level": level,
                       "music_list": music_list}, file)


def load_progres(): # Функция по загрузке всей информации
    global pigeon_list, count, current_pigeon, level, music_list
    try:
        with open('progress.json', 'r') as file:
            data = json.load(file)
            count = data.get('count', 0)
            pigeon_list = data.get('pigeon_list', [])
            level = data.get('level', 1)
            music_list = data.get('music_list', [])



    except FileNotFoundError: # Если файл не найден
        count = 0
        pigeon_list = []


def buy_skin(pigeon_price, pigeon_image, button, pigeon_id): # Цена, фото, кнопка и id фото
    global count
    if pigeon_id in pigeon_list: # Проверяем есль ли у нас купленый голубь
        button.configure(text='Purchased', state='disabled', fg_color='green')
        save_progres()
    else:
        if count >= pigeon_price: # Проверяем достаточно ли денег у нас для покупки
            count -= pigeon_price # Вычесляем цену голубя от наших кликов
            CTkMessagebox(title='Info', message='Thanks for purchase')
            label_clicks.configure(text=str(count)) # Меняем в нашем лейбле количесто кликов что у нас остались
            # pigeon_place.configure(image=pigeon_image) # Меняем фото голубя
            button.configure(text='Purchased', state='disabled', fg_color='green')
            if pigeon_id not in pigeon_list:
                pigeon_list.append(pigeon_id)
            else:
                return
            save_progres()

            end_game_button()

        else:

            CTkMessagebox(title="Error", message="Not enough money!!!", icon="cancel")


def buy_music(music_price, back, button, music_id): # Цена, фото, кнопка и id фото
    global count
    if music_id in music_list:
        button.configure(text='Purchased', state='disabled', fg_color='green')
        save_progres()
    else:
        if count >= music_price:
            count -= music_price
            CTkMessagebox(title='Info', message='Thanks for purchase')
            label_clicks.configure(text=str(count))

            button.configure(text='Purchased', state='disabled', fg_color='green')
            if music_id not in music_list:
                music_list.append(music_id)
            else:
                return
            save_progres()

            end_game_button()

        else:

            CTkMessagebox(title="Error", message="Not enough money!!!", icon="cancel")


def pigeons_shop():

    pigeon_shop = CTkToplevel()
    pigeon_shop.title('Shop')
    pigeon_shop.configure(fg_color='#3271a8')
    center_window(pigeon_shop, 500, 600)
    pigeon_shop.grab_set()

    CTkLabel(pigeon_shop, text='SHOP', font=('Arial',20), width=200, height=30).place(x=150, y=10)
    pigeon_image2 = CTkImage(Image.open('Pigeons/Pigeons/Pigeon2.png'), size=(200, 150)) # Каждому голубю даем размер
    pigeon_image3 = CTkImage(Image.open('Pigeons/Pigeons/Pigeon3.png'), size=(200, 150))
    pigeon_image4 = CTkImage(Image.open('Pigeons/Pigeons/Pigeon4.png'), size=(200, 150))
    pigeon_image5 = CTkImage(Image.open('Pigeons/Pigeons/Pigeon5.png'), size=(200, 150))

    frame3 = CTkFrame(pigeon_shop)  # Создаем для каждого голубя власную рамку
    frame3.place(x=20, y=60)
    frame4 = CTkFrame(pigeon_shop)
    frame4.place(x=280, y=60)
    frame5 = CTkFrame(pigeon_shop)
    frame5.place(x=20, y=300)
    frame6 = CTkFrame(pigeon_shop, width=280)
    frame6.place(x=280, y=300)

    CTkLabel(frame3, text='', image=pigeon_image2, compound='top').pack()
    CTkLabel(frame4, text='', image=pigeon_image3, compound='top').pack()  # Вставляем фото всредину рамки
    CTkLabel(frame5, text='', image=pigeon_image4, compound='top').pack()
    CTkLabel(frame6, text='', image=pigeon_image5, compound='top').pack()


    CTkButton(pigeon_shop, text='Exit from the shop', font=('Arial',20), command=pigeon_shop.destroy, fg_color='black').place(x=180, y=550)

    buy_pigeon1 = CTkButton(frame3, text='Buy - 500', font=('Arial', 16), image=image, compound='right', height=30,
                            command=lambda: buy_skin(500, pigeon_image2, buy_pigeon1, 1))
    if 1 in pigeon_list:  # Проверка, куплен ли голубь с pigeon_id = 1
        buy_pigeon1.configure(text='Purchased', state='disabled', fg_color='green')
    buy_pigeon1.pack()

    buy_pigeon2 = CTkButton(frame4, text='Buy - 1000', font=('Arial', 16), image=image, compound='right', height=30,
                            command=lambda: buy_skin(1000, pigeon_image3, buy_pigeon2, 2))
    if 2 in pigeon_list:
        buy_pigeon2.configure(text='Purchased', state='disabled', fg_color='green')
    buy_pigeon2.pack()

    buy_pigeon3 = CTkButton(frame5, text='Buy - 1500', font=('Arial', 16), image=image, compound='right', height=30,
                            command=lambda: buy_skin(1500, pigeon_image4, buy_pigeon3, 3))
    if 3 in pigeon_list:
        buy_pigeon3.configure(text='Purchased', state='disabled', fg_color='green')
    buy_pigeon3.pack()

    buy_pigeon4 = CTkButton(frame6, text='Buy - 2000', font=('Arial', 16), image=image, compound='right', height=30,
                            command=lambda: buy_skin(2000, pigeon_image5, buy_pigeon4, 4))
    if 4 in pigeon_list:
        buy_pigeon4.configure(text='Purchased', state='disabled', fg_color='green')
    buy_pigeon4.pack()

def musics_shop():
    music_shop = CTkToplevel()
    music_shop.title('Shop')
    music_shop.configure(fg_color='#3271a8')
    center_window(music_shop, 500, 600)
    music_shop.grab_set()


    CTkLabel(music_shop, text='MUSIC SHOP', font=('Arial', 20), width=200, height=30).place(x=150, y=10)
    background_music_1 = CTkImage(Image.open('Pigeons/Music_icons/music1_icon.png'),size=(200, 150))
    background_music_2 = CTkImage(Image.open('Pigeons/Music_icons/music2_icon.jpg'), size=(200, 150))
    background_music_3 = CTkImage(Image.open('Pigeons/Music_icons/music3_icon.jpg'), size=(200, 150))
    background_music_4 = CTkImage(Image.open('Pigeons/Music_icons/music4_icon.jpg'), size=(200, 150))


    frame7 = CTkFrame(music_shop)
    frame7.place(x=20, y=60)
    frame8 = CTkFrame(music_shop)
    frame8.place(x=280, y=60)
    frame9 = CTkFrame(music_shop)
    frame9.place(x=20, y=300)
    frame10 = CTkFrame(music_shop, width=280)
    frame10.place(x=280, y=300)


    CTkLabel(frame7, text='', image=background_music_1, compound='top').pack()
    CTkLabel(frame8, text='', image=background_music_2, compound='top').pack()  # Вставляем фото всредину рамки
    CTkLabel(frame9, text='', image=background_music_3, compound='top').pack()
    CTkLabel(frame10, text='', image=background_music_4, compound='top').pack()


    CTkButton(music_shop, text='Exit from the shop', font=('Arial', 20), command=music_shop.destroy,
              fg_color='black').place(x=180, y=550)

    buy_music1 = CTkButton(frame7, text='Buy - 200', font=('Arial', 16), image=image, compound='right', height=30,
                            command=lambda: buy_music(200, background_music_1,  buy_music1, 1))
    if 1 in music_list:
        buy_music1.configure(text='Purchased', state='disabled', fg_color='green')
    buy_music1.pack()

    buy_music2 = CTkButton(frame8, text='Buy - 400', font=('Arial', 16), image=image, compound='right', height=30,
                            command=lambda: buy_music(400, background_music_2,  buy_music2, 2))
    if 2 in music_list:
        buy_music2.configure(text='Purchased', state='disabled', fg_color='green')
    buy_music2.pack()

    buy_music3 = CTkButton(frame9, text='Buy - 800', font=('Arial', 16), image=image, compound='right', height=30,
                            command=lambda: buy_music(800, background_music_3, buy_music3, 3))
    if 3 in music_list:
        buy_music3.configure(text='Purchased', state='disabled', fg_color='green')
    buy_music3.pack()

    buy_music4 = CTkButton(frame10, text='Buy - 1600', font=('Arial', 16), image=image, compound='right', height=30,
                            command=lambda: buy_music(1600, background_music_4,  buy_music4, 4))
    if 4 in music_list:
        buy_music4.configure(text='Purchased', state='disabled', fg_color='green')
    buy_music4.pack()



def button_clicked():
    global count, minigame_clicks  # Используем global чтобы работать из переменной из-вне
    count += click_multiplier # Используем click_multiplier чтобы обновлялись клики
    if minigame_active: # Если у нас активна minigame
        minigame_clicks += click_multiplier
    label_clicks.configure(text=str(count)) # Переобразовуем count в строку
    change_pigeon()
    save_progres()


def center_window(window,width, height):

    screen_width = window.winfo_screenwidth()
    screen_height = window.winfo_screenheight()

    x = (screen_width - width) // 2
    y = (screen_height - height) // 2

    window.geometry(f'{width}x{height}+{x}+{y}')


count = 0
load_progres()


win = CTk()
win.resizable(False, False)
play_sound()
end_game_button()


win.configure(fg_color='#3271a8')

center_window(win,500, 600)

CTkButton(win, text='Click on me', command=button_clicked, border_color='black', border_width=1, width=250, height=30).place(x=140, y=80)

frame = CTkFrame(win, fg_color="#c187ff", corner_radius=1, border_width=1, border_color="blue")
frame.place(x=100)


label = CTkLabel(frame, text="advertising", font=("Arial", 30), text_color='black', width=300)
label.pack(padx=15, pady=6)


frame1 = CTkFrame(win, fg_color="white", corner_radius=1, border_width=1, border_color="blue", width=120, height=40)
frame1.place(x=190, y=150)

image = CTkImage(Image.open('Pigeons/Seeds/Seed1.png'), size=(70, 60))

label_clicks = CTkLabel(frame1, text=str(count), text_color='black', font=('Arial', 30), width=120, height=40, image=image, compound='right')
label_clicks.pack(padx=15, pady=6)

pigeon_image = CTkImage(Image.open('Pigeons/Pigeon_animation/pigeon_animation1.png'), size=(200,200))

frame2 = CTkFrame(win)
frame2.place(x=150, y=300)

pigeon_place = CTkLabel(frame2, text='', image=pigeon_image)
pigeon_place.pack(padx=15, pady=6)

skin_shop = CTkButton(win, text='Pigeon Shop', command=pigeons_shop, width=100, height=25, fg_color='black')
skin_shop.place(x=10, y=250)

music_shop = CTkButton(win, text='Music Shop', command=musics_shop, width=100, height=25, fg_color='black')
music_shop.place(x=390, y=250)

pigeon_inv = CTkButton(win, text='Pigeon Inventory', command=pigeon_inventory, width=100, height=25, fg_color='black')
pigeon_inv.place(x=10, y=400)

music_inv = CTkButton(win, text='Music Inventory', command=musics_inventory, width=100, height=25, fg_color='black')
music_inv.place(x=390, y=400)

auto_clicker1 = CTkButton(win, text='Autoclicker - 350', command=start_auto_clicker, width=100, height=25, fg_color='blue')
auto_clicker1.place(x=210, y=550)

end_game = CTkButton(win, text='Secret Button - 350', command=eg_button_function, width=100, height=25, fg_color='gold', bg_color='black', text_color='black')

minigame_button = CTkButton(win, text=f'Minigame - Lvl{level}', command=start_minigame, width=100, height=25, fg_color='black', text_color='gold')
minigame_button.place(x=390, y=550)

win.mainloop()
